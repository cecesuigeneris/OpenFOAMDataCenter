/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      createBafflesDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Whether to convert internal faces only (so leave boundary faces intact).
// This is only relevant if your face selection type can pick up boundary
// faces.
internalFacesOnly true;

// Baffles to create.
baffles
{
    cyclicFaces
    {
        //- Use predefined faceZone to select faces and orientation.
       /* type        searchableSurface;
        surface     searchablePlate;
        origin      (1 0 0);
        span        (0 0.6 0.6);*/
	type	    faceZone;
	zoneName    plate;
        
	patches
        {
            master
            {
                //- Master side patch

                name            porous_half0;
                type            cyclic;
                neighbourPatch  porous_half1;

		//- Optional override of added patchfields. If not specified
                //  any added patchfields are of type calculated.
                patchFields
                {
                    p_rgh
                    {
                        type            porousBafflePressure; 
                        patchType       cyclic;
                        D               6.3e4; //1000 
                        I               40; //170 cannot run
                        length          0.104; 
                        jump            uniform 0;
                        value           uniform 0;
                    }
                }
            }
	    slave
            {
                //- Slave side patch

                name            porous_half1;
                type            cyclic;
                neighbourPatch  porous_half0;

                patchFields
                {
                    ${...master.patchFields}
                }
            }
        }
    }
}

// ************************************************************************* //
