/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.2.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      createBafflesDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

internalFacesOnly true;

baffles
{

    obstacle
    {
        //- Use predefined faceZone to select faces and orientation.
        type      	searchableSurface;
        surface     	searchablePlate;
        origin      	(50.40 23.60 0.5);
        span        	(0 6.2 0.1);


        patchPairs
        {
	    type	wall;
	    name	obstaclewall;

            patchFields
            {
                epsilon
                {
                    type            epsilonWallFunction;
                    value           uniform 0.01;
                }
                k
                {
                    type            kqRWallFunction;
                    value           uniform 0.1;
                }
                nut
                {
                    type            nutkWallFunction;
                    value           uniform 0;
                }
                p
                {
                    type            calculated;
                    value           uniform 0;
                }
                p_rgh
                {
                    type            fixedFluxPressure;
                    rho             rhok;
                    gradient        uniform 0;
                }
                alphat
                {
                    type            alphatJayatillekeWallFunction;
                    Prt             0.85;
                    value           uniform 0;
                }
                U
                {
                    type            fixedValue;
                    value           uniform (0 0 0);
                }
                T
                {
                    type            zeroGradient;
                }


            }
         }
    }


    baffleFaces
    {
        //- Use predefined faceZone to select faces and orientation.
        type        faceZone;
        zoneName    baffleFaces;

        patchPairs
        {
	    type	wall;
	    name	internalBaffles;

            patchFields
            {
                epsilon
                {
                    type            epsilonWallFunction;
                    value           uniform 0.01;
                }
                k
                {
                    type            kqRWallFunction;
                    value           uniform 0.1;
                }
                nut
                {
                    type            nutkWallFunction;
                    value           uniform 0;
                }
                
                p
                {
                    type            calculated;
                    value           uniform 0;
                }
                p_rgh
                {
                    type            fixedFluxPressure;
                    rho             rhok;
                    gradient        uniform 0;
                }
                alphat
                {
                    type            alphatJayatillekeWallFunction;
                    Prt             0.85;
                    value           uniform 0;
                }
                U
                {
                    type            fixedValue;
                    value           uniform (0 0 0);
                }
                T
                {
                    type            zeroGradient;
                }
            }
         }
    }
   


}
